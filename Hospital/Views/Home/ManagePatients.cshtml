@model IEnumerable<Patient>

@{
    ViewData["Title"] = "Manage Patients";
}

<div class="container">
    <div class="card">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h3 class="card-title mb-0">
                <i class="fas fa-users me-2"></i>Manage Patients
            </h3>
            <button class="btn btn-light" data-bs-toggle="modal" data-bs-target="#addPatientModal">
                <i class="fas fa-plus me-2"></i>Add New Patient
            </button>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>TC</th>
                            <th>Age</th>
                            <th>Disease</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var patient in Model)
                        {
                            <tr data-patient-id="@patient.PatientId">
                                <td>@patient.FirstName @patient.LastName</td>
                                <td>@patient.TC</td>
                                <td>@patient.Age</td>
                                <td>@(string.IsNullOrEmpty(patient.Disease) ? "No disease recorded" : patient.Disease)</td>
                                <td>
                                    <button class="btn btn-danger btn-sm" onclick="deletePatient(@patient.PatientId)">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function deletePatient(patientId) {
            if (confirm('Are you sure you want to delete this patient? This action cannot be undone.')) {
                fetch('/Home/DeletePatient', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ id: patientId }) // DeleteModel formatýna uygun parametre
                })
                .then(response => {
                    if (!response.ok) {
                        // Response ok deðilse hata mesajý
                        throw new Error('Network response was not ok');
                    }
                    return response.json(); // JSON olarak yanýtý alýyoruz
                })
                .then(result => {
                    if (result.success) {
                        // Yanýt baþarýlý ise satýrý sil
                        const row = document.querySelector(`tr[data-patient-id="${patientId}"]`);
                        if (row) {
                            row.remove(); // Satýrý kaldýr
                        }
                        alert('Patient deleted successfully');
                    } else {
                        // Hata mesajý varsa, uyarý göster
                        alert(result.message || 'Failed to delete patient');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while deleting the patient');
                });
            }
        }
    </script>
}
